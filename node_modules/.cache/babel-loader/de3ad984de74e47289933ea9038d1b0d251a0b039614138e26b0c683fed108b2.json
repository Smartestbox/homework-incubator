{"ast":null,"code":"export const homeWorkReducer = (state, action) => {\n  // need to fix any\n  const stateCopy = state.map(el => ({\n    ...el\n  }));\n  switch (action.type) {\n    case 'sort':\n      // by name\n      return action.payload === 'up' ? stateCopy.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        } else if (a.name < b.name) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }) : stateCopy.sort((a, b) => {\n        if (a.name > b.name) {\n          return -1;\n        } else if (a.name < b.name) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n    case 'check':\n      return stateCopy.filter(el => el.age >= action.payload);\n    // need to fix\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["homeWorkReducer","state","action","stateCopy","map","el","type","payload","sort","a","b","name","filter","age"],"sources":["/Users/igorolkhov/Desktop/projects/it-incubator/homework-first-month-first-week-autocheck/src/s2-homeworks/hw08/bll/homeWorkReducer.ts"],"sourcesContent":["import {UserType} from '../HW8'\n\ntype ActionType =\n    { type: 'sort'; payload: 'up' | 'down' } |\n    { type: 'check'; payload: number }\n\n\nexport const homeWorkReducer = (state: UserType[], action: ActionType): UserType[] => { // need to fix any\n    const stateCopy = state.map(el => ({...el}))\n\n    switch (action.type) {\n        case 'sort':  // by name\n            return action.payload === 'up' ?\n                stateCopy.sort((a,b) => {\n                    if(a.name > b.name){\n                        return 1\n                    } else if(a.name < b.name) {\n                        return -1\n                    } else {\n                        return 0\n                    }\n                }) :\n                stateCopy.sort((a,b) => {\n                    if(a.name > b.name){\n                        return -1\n                    } else if(a.name < b.name) {\n                        return 1\n                    } else {\n                        return 0\n                    }\n                })\n        case 'check':\n            return stateCopy.filter(el => el.age >= action.payload) // need to fix\n        default:\n            return state\n    }\n}\n"],"mappings":"AAOA,OAAO,MAAMA,eAAe,GAAG,CAACC,KAAiB,EAAEC,MAAkB,KAAiB;EAAE;EACpF,MAAMC,SAAS,GAAGF,KAAK,CAACG,GAAG,CAACC,EAAE,KAAK;IAAC,GAAGA;EAAE,CAAC,CAAC,CAAC;EAE5C,QAAQH,MAAM,CAACI,IAAI;IACf,KAAK,MAAM;MAAG;MACV,OAAOJ,MAAM,CAACK,OAAO,KAAK,IAAI,GAC1BJ,SAAS,CAACK,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;QACpB,IAAGD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAC;UACf,OAAO,CAAC;QACZ,CAAC,MAAM,IAAGF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACvB,OAAO,CAAC,CAAC;QACb,CAAC,MAAM;UACH,OAAO,CAAC;QACZ;MACJ,CAAC,CAAC,GACFR,SAAS,CAACK,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;QACpB,IAAGD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAC;UACf,OAAO,CAAC,CAAC;QACb,CAAC,MAAM,IAAGF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACvB,OAAO,CAAC;QACZ,CAAC,MAAM;UACH,OAAO,CAAC;QACZ;MACJ,CAAC,CAAC;IACV,KAAK,OAAO;MACR,OAAOR,SAAS,CAACS,MAAM,CAACP,EAAE,IAAIA,EAAE,CAACQ,GAAG,IAAIX,MAAM,CAACK,OAAO,CAAC;IAAC;IAC5D;MACI,OAAON,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}