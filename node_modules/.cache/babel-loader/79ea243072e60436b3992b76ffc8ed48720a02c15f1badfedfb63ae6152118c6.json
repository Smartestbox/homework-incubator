{"ast":null,"code":"var _jsxFileName = \"/Users/igorolkhov/Desktop/projects/it-incubator/homework-first-month-first-week-autocheck/src/s2-homeworks/hw06/common/c4-SuperEditableSpan/SuperEditableSpan.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './SuperEditableSpan.module.css';\nimport SuperInputText from '../../../hw04/common/c1-SuperInputText/SuperInputText';\nimport editIcon from './editIcon.svg';\n\n// тип пропсов обычного инпута\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SuperEditableSpan = _ref => {\n  _s();\n  let {\n    autoFocus,\n    onBlur,\n    onEnter,\n    spanProps,\n    ...restProps // все остальные пропсы попадут в объект restProps\n  } = _ref;\n  const [editMode, setEditMode] = useState(false);\n  const {\n    children,\n    onDoubleClick,\n    className,\n    defaultText,\n    ...restSpanProps\n  } = spanProps || {};\n  const onEnterCallback = () => {\n    // выключить editMode при нажатии Enter // делают студенты\n    // setEditMode(false)\n    // onEnter?.()\n    console.log('onEnter clicked');\n  };\n  const onBlurCallback = e => {\n    // выключить editMode при нажатии за пределами инпута // делают студенты\n\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n  };\n  const onDoubleClickCallBack = e => {\n    // включить editMode при двойном клике // делают студенты\n\n    onDoubleClick === null || onDoubleClick === void 0 ? void 0 : onDoubleClick(e);\n  };\n  const spanClassName = s.span + (className ? ' ' + className : '');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: editMode ? /*#__PURE__*/_jsxDEV(SuperInputText, {\n      autoFocus: autoFocus || true,\n      onBlur: onBlurCallback,\n      onEnter: onEnterCallback,\n      className: s.input,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.spanBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: editIcon,\n        className: s.pen,\n        alt: 'edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onDoubleClick: onDoubleClickCallBack,\n        className: spanClassName,\n        ...restSpanProps,\n        children: children || restProps.value || defaultText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(SuperEditableSpan, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n_c = SuperEditableSpan;\nexport default SuperEditableSpan;\nvar _c;\n$RefreshReg$(_c, \"SuperEditableSpan\");","map":{"version":3,"names":["React","useState","s","SuperInputText","editIcon","SuperEditableSpan","autoFocus","onBlur","onEnter","spanProps","restProps","editMode","setEditMode","children","onDoubleClick","className","defaultText","restSpanProps","onEnterCallback","console","log","onBlurCallback","e","onDoubleClickCallBack","spanClassName","span","input","spanBlock","pen","value"],"sources":["/Users/igorolkhov/Desktop/projects/it-incubator/homework-first-month-first-week-autocheck/src/s2-homeworks/hw06/common/c4-SuperEditableSpan/SuperEditableSpan.tsx"],"sourcesContent":["import React, {\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n    HTMLAttributes,\n    useState,\n    KeyboardEvent\n} from 'react'\nimport s from './SuperEditableSpan.module.css'\nimport SuperInputText from '../../../hw04/common/c1-SuperInputText/SuperInputText'\nimport editIcon from './editIcon.svg'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута, кроме type\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = Omit<DefaultInputPropsType, 'type'> & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n\n    spanProps?: DefaultSpanPropsType  & {defaultText?: string}// пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus,\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps // все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, defaultText, ...restSpanProps} =\n    spanProps || {}\n\n    const onEnterCallback = () => {\n        // выключить editMode при нажатии Enter // делают студенты\n        // setEditMode(false)\n        // onEnter?.()\n        console.log('onEnter clicked')\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // выключить editMode при нажатии за пределами инпута // делают студенты\n\n        onBlur?.(e)\n    }\n    const onDoubleClickCallBack = (\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\n    ) => {\n        // включить editMode при двойном клике // делают студенты\n\n        onDoubleClick?.(e)\n    }\n\n    const spanClassName = s.span\n        + (className ? ' ' + className : '')\n\n    return (\n        <>\n            {editMode ? (\n                <SuperInputText\n                    autoFocus={autoFocus || true}\n                    onBlur={onBlurCallback}\n                    onEnter={onEnterCallback}\n                    className={s.input}\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                />\n            ) : (\n                <div className={s.spanBlock}>\n                    <img\n                        src={editIcon}\n                        className={s.pen}\n                        alt={'edit'}\n                    />\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n\n                        {children || restProps.value || defaultText}\n                    </span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n"],"mappings":";;AAAA,OAAOA,KAAK,IAIRC,QAAQ,QAEL,OAAO;AACd,OAAOC,CAAC,MAAM,gCAAgC;AAC9C,OAAOC,cAAc,MAAM,uDAAuD;AAClF,OAAOC,QAAQ,MAAM,gBAAgB;;AAErC;AAAA;AAAA;AAkBA,MAAMC,iBAAkD,GAAG,QAStD;EAAA;EAAA,IARD;IACIC,SAAS;IACTC,MAAM;IACNC,OAAO;IACPC,SAAS;IAET,GAAGC,SAAS,CAAC;EACjB,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EACxD,MAAM;IAACY,QAAQ;IAAEC,aAAa;IAAEC,SAAS;IAAEC,WAAW;IAAE,GAAGC;EAAa,CAAC,GACzER,SAAS,IAAI,CAAC,CAAC;EAEf,MAAMS,eAAe,GAAG,MAAM;IAC1B;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAClC,CAAC;EACD,MAAMC,cAAc,GAAIC,CAAqC,IAAK;IAC9D;;IAEAf,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAGe,CAAC,CAAC;EACf,CAAC;EACD,MAAMC,qBAAqB,GACvBD,CAAgD,IAC/C;IACD;;IAEAR,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAGQ,CAAC,CAAC;EACtB,CAAC;EAED,MAAME,aAAa,GAAGtB,CAAC,CAACuB,IAAI,IACrBV,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAAC;EAExC,oBACI;IAAA,UACKJ,QAAQ,gBACL,QAAC,cAAc;MACX,SAAS,EAAEL,SAAS,IAAI,IAAK;MAC7B,MAAM,EAAEe,cAAe;MACvB,OAAO,EAAEH,eAAgB;MACzB,SAAS,EAAEhB,CAAC,CAACwB,KAAM;MAAA,GACfhB;IAAS;MAAA;MAAA;MAAA;IAAA,QACf,gBAEF;MAAK,SAAS,EAAER,CAAC,CAACyB,SAAU;MAAA,wBACxB;QACI,GAAG,EAAEvB,QAAS;QACd,SAAS,EAAEF,CAAC,CAAC0B,GAAI;QACjB,GAAG,EAAE;MAAO;QAAA;QAAA;QAAA;MAAA,QACd,eACF;QACI,aAAa,EAAEL,qBAAsB;QACrC,SAAS,EAAEC,aAAc;QAAA,GACrBP,aAAa;QAAA,UAIhBJ,QAAQ,IAAIH,SAAS,CAACmB,KAAK,IAAIb;MAAW;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA;EAEd,iBACF;AAEX,CAAC;AAAA,GAlEKX,iBAAkD;AAAA,KAAlDA,iBAAkD;AAoExD,eAAeA,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}