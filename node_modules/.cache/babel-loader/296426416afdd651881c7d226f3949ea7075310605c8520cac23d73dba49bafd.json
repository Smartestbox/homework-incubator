{"ast":null,"code":"import _slicedToArray from\"/Users/igorolkhov/Desktop/projects/it-incubator/homework-first-month-first-week-autocheck/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/igorolkhov/Desktop/projects/it-incubator/homework-first-month-first-week-autocheck/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useState}from'react';import{v1}from'uuid';import s2 from'../../s1-main/App.module.css';import GreetingContainer from'./GreetingContainer';/*\n* 1 - описать тип UserType\n* 2 - указать нужный тип в useState с users\n* 3 - дописать типы и логику функции pureAddUserCallback и проверить её тестами\n* 4 - в файле GreetingContainer.tsx дописать типизацию пропсов\n* 5 - в файле GreetingContainer.tsx указать нужные типы в useState с name и error\n* 6 - в файле GreetingContainer.tsx дописать тип и логику функции setNameCallback\n* 7 - в файле GreetingContainer.tsx дописать логику функций pureAddUser, pureOnBlur, pureOnEnter и проверить их тестами\n* 8 - в файле GreetingContainer.tsx вычислить количество добавленных и имя последнего (totalUsers, lastUserName)\n* 9 - в файле Greeting.tsx дописать типизацию пропсов\n* 10 - в файле Greeting.tsx вычислить inputClass в зависимости от наличия ошибки\n* 11 - сделать стили в соответствии с дизайном\n* */ // types\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var pureAddUserCallback=function pureAddUserCallback(name,setUsers,users){// need to fix any\nvar user={// need to fix\n_id:v1(),name:name};setUsers([].concat(_toConsumableArray(users),[user]));};var HW3=function HW3(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];// need to fix any\nvar addUserCallback=function addUserCallback(name){// need to fix any\npureAddUserCallback(name,setUsers,users);};return/*#__PURE__*/_jsxs(\"div\",{id:'hw3',children:[/*#__PURE__*/_jsx(\"div\",{className:s2.hwTitle,children:\"Homework #3\"}),/*#__PURE__*/_jsx(\"div\",{className:s2.hw,children:/*#__PURE__*/_jsx(GreetingContainer,{users:users,addUserCallback:addUserCallback})})]});};export default HW3;","map":{"version":3,"names":["React","useState","v1","s2","GreetingContainer","pureAddUserCallback","name","setUsers","users","user","_id","HW3","addUserCallback","hwTitle","hw"],"sources":["/Users/igorolkhov/Desktop/projects/it-incubator/homework-first-month-first-week-autocheck/src/s2-homeworks/hw03/HW3.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { v1 } from 'uuid'\nimport s2 from '../../s1-main/App.module.css'\nimport GreetingContainer from './GreetingContainer'\n\n/*\n* 1 - описать тип UserType\n* 2 - указать нужный тип в useState с users\n* 3 - дописать типы и логику функции pureAddUserCallback и проверить её тестами\n* 4 - в файле GreetingContainer.tsx дописать типизацию пропсов\n* 5 - в файле GreetingContainer.tsx указать нужные типы в useState с name и error\n* 6 - в файле GreetingContainer.tsx дописать тип и логику функции setNameCallback\n* 7 - в файле GreetingContainer.tsx дописать логику функций pureAddUser, pureOnBlur, pureOnEnter и проверить их тестами\n* 8 - в файле GreetingContainer.tsx вычислить количество добавленных и имя последнего (totalUsers, lastUserName)\n* 9 - в файле Greeting.tsx дописать типизацию пропсов\n* 10 - в файле Greeting.tsx вычислить inputClass в зависимости от наличия ошибки\n* 11 - сделать стили в соответствии с дизайном\n* */\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\nexport const pureAddUserCallback = (name: string, setUsers: (users: Array<UserType>) => void, users: Array<UserType>) => { // need to fix any\n    const user = { // need to fix\n        _id: v1(),\n        name: name,\n    }\n    setUsers([...users, user])\n\n}\n\nconst HW3 = () => {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        pureAddUserCallback(name, setUsers, users)\n    }\n\n    return (\n        <div id={'hw3'}>\n            <div className={s2.hwTitle}>Homework #3</div>\n            {/*для автоматической проверки дз (не менять)*/}\n\n            <div className={s2.hw}>\n                <GreetingContainer\n                    users={users}\n                    addUserCallback={addUserCallback}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default HW3\n"],"mappings":"sWAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,EAAE,KAAQ,MAAM,CACzB,MAAOC,GAAE,KAAM,8BAA8B,CAC7C,MAAOC,kBAAiB,KAAM,qBAAqB,CAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAZA,CAcA;AAAA,wFAMA,MAAO,IAAMC,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIC,IAAY,CAAEC,QAA0C,CAAEC,KAAsB,CAAK,CAAE;AACvH,GAAMC,KAAI,CAAG,CAAE;AACXC,GAAG,CAAER,EAAE,EAAE,CACTI,IAAI,CAAEA,IACV,CAAC,CACDC,QAAQ,8BAAKC,KAAK,GAAEC,IAAI,GAAE,CAE9B,CAAC,CAED,GAAME,IAAG,CAAG,QAANA,IAAG,EAAS,CACd,cAA0BV,QAAQ,CAAkB,EAAE,CAAC,wCAAhDO,KAAK,eAAED,QAAQ,eAAkC;AAExD,GAAMK,gBAAe,CAAG,QAAlBA,gBAAe,CAAIN,IAAY,CAAK,CAAE;AACxCD,mBAAmB,CAACC,IAAI,CAAEC,QAAQ,CAAEC,KAAK,CAAC,CAC9C,CAAC,CAED,mBACI,aAAK,EAAE,CAAE,KAAM,wBACX,YAAK,SAAS,CAAEL,EAAE,CAACU,OAAQ,yBAAkB,cAG7C,YAAK,SAAS,CAAEV,EAAE,CAACW,EAAG,uBAClB,KAAC,iBAAiB,EACd,KAAK,CAAEN,KAAM,CACb,eAAe,CAAEI,eAAgB,EACnC,EACA,GACJ,CAEd,CAAC,CAED,cAAeD,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}