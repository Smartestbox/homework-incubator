{"ast":null,"code":"var _jsxFileName = \"/Users/igorolkhov/Desktop/projects/it-incubator/homework-first-month-first-week-autocheck/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx\";\nimport React from 'react';\nimport s from './SuperButton.module.css';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperButton = _ref => {\n  let {\n    xType,\n    className,\n    disabled,\n    ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n  } = _ref;\n  const finalClassName = s.button + (disabled ? ' ' + s.disabled : xType === 'red' ? s.red : xType === 'secondary' ? s.secondary : restProps.children === 'default' ? s.default : '');\n  // + (className ? ' ' + className : '')\n  // задачка на смешивание классов\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: disabled,\n    className: finalClassName,\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = SuperButton;\nexport default SuperButton;\n\n// const finalClassName = s.button\n// + (disabled\n//         ? ...\n//         : xType === 'red'\n//             ? ...\n// + (className ? ' ' + className : '') // задачка на смешивание классов\nvar _c;\n$RefreshReg$(_c, \"SuperButton\");","map":{"version":3,"names":["React","s","SuperButton","xType","className","disabled","restProps","finalClassName","button","red","secondary","children","default"],"sources":["/Users/igorolkhov/Desktop/projects/it-incubator/homework-first-month-first-week-autocheck/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx"],"sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    xType?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        xType,\n        className,\n        disabled,\n        ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = s.button + (disabled ? ' ' + s.disabled\n            : xType === 'red' ? s.red\n                : xType === 'secondary' ? s.secondary\n                    : restProps.children === 'default' ? s.default\n                        : '')\n        // + (className ? ' ' + className : '')\n    // задачка на смешивание классов\n\n    return (\n        <button\n            disabled={disabled}\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n\n\n// const finalClassName = s.button\n// + (disabled\n//         ? ...\n//         : xType === 'red'\n//             ? ...\n// + (className ? ' ' + className : '') // задачка на смешивание классов"],"mappings":";AAAA,OAAOA,KAAK,MAAiD,OAAO;AACpE,OAAOC,CAAC,MAAM,0BAA0B;;AAExC;AAAA;AAQA,MAAMC,WAA2C,GAAG,QAO/C;EAAA,IAND;IACIC,KAAK;IACLC,SAAS;IACTC,QAAQ;IACR,GAAGC,SAAS,CAAC;EACjB,CAAC;EAED,MAAMC,cAAc,GAAGN,CAAC,CAACO,MAAM,IAAIH,QAAQ,GAAG,GAAG,GAAGJ,CAAC,CAACI,QAAQ,GACpDF,KAAK,KAAK,KAAK,GAAGF,CAAC,CAACQ,GAAG,GACnBN,KAAK,KAAK,WAAW,GAAGF,CAAC,CAACS,SAAS,GAC/BJ,SAAS,CAACK,QAAQ,KAAK,SAAS,GAAGV,CAAC,CAACW,OAAO,GACxC,EAAE,CAAC;EACrB;EACJ;;EAEA,oBACI;IACI,QAAQ,EAAEP,QAAS;IACnB,SAAS,EAAEE,cAAe;IAAA,GACtBD;EAAS;IAAA;IAAA;IAAA;EAAA,QACf;AAEV,CAAC;AAAA,KAvBKJ,WAA2C;AAyBjD,eAAeA,WAAW;;AAG1B;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}